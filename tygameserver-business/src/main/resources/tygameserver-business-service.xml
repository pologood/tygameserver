<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
		   http://www.springframework.org/schema/data/mongo 
		   http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">
    <import resource="classpath*:tygameserver-config-service.xml"/>
    <import resource="classpath*:tygameserver-support-service.xml"/>
    <context:component-scan base-package="com.netease.pangu.game.dao"/>
    <context:component-scan base-package="com.netease.pangu.game.service"/>
    <context:annotation-config/>
    <mongo:mongo id="mongo" replica-set="${mongo.replicaSet}">
        <mongo:options connections-per-host="${mongo.connectionsPerHost}"
                       threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                       connect-timeout="${mongo.connectTimeout}" max-wait-time="${mongo.maxWaitTime}"
                       auto-connect-retry="${mongo.autoConnectRetry}" socket-keep-alive="${mongo.socketKeepAlive}"
                       socket-timeout="${mongo.socketTimeout}" slave-ok="${mongo.slaveOk}"
                       write-number="${mongo.writeNumber}" write-timeout="${mongo.riteTimeout}"
                       write-fsync="${mongo.writeFsync}"/>
    </mongo:mongo>
    <!-- 设置使用的数据库 名 -->
    <mongo:db-factory dbname="littlegame" mongo-ref="mongo" username="${mongo.userName}" password="${mongo.password}"/>
    <!-- mongodb的模板 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>

    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="database" value="${redis.default.db}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property
                name="testOnBorrow"
                value="${redis.pool.testOnBorrow}"/>
        <property
                name="testOnReturn"
                value="${redis.pool.testOnReturn}"/>
        <property
                name="testWhileIdle"
                value="${redis.pool.testWhileIdle}"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnFactory"/>
</beans>